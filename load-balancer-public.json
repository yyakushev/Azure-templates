{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templateUri": {
      "type": "string"
    },
    "lbname": {
      "type": "string"
    },
    "sku": {
      "type": "string",
      "defaultValue": "Basic"
    },
    "pipname": {
      "type": "string"
    },
    "publicIPAllocationMethod": {
      "type": "string",
      "defaultValue": "Static"
    },
    "nicname": {
      "type": "string",
      "defaultValue": "nic"
    },
    "nicsubnet": {
      "type": "string",
      "defaultValue": "nicsubnet"
    },
    "nicvnet": {
      "type": "string",
      "defaultValue": "nicvnet"
    },
    "inboundNATrules": {
      "type": "array",
      "defaultValue": [
        {
          "name": "rdp-enable",
          "protocol": "tcp",
          "frontendPort": "3389",
          "backendPort": "3389"
        }
      ]
    }
  },
  "resources": [
    //create a public ip for lb
    {
      "apiVersion": "2018-02-01",
      "name": "[concat('lb-',parameters('pipname'),'-linked-template')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateUri'),'public-ip.json')]", //"https://raw.githubusercontent.com/yyakushev/Azure-templates/master/public-ip.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "pipname": { "value": "[parameters('pipname')]" },
          "publicIPAllocationMethod": { "value": "[parameters('publicIPAllocationMethod')]" }
        }
      },
      "dependsOn": []
    },
    //create the lb
    {
      "apiVersion": "2018-08-01",
      "name": "[parameters('lbname')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "dependsOn": [ "[concat('lb-',parameters('pipname'),'-linked-template')]" ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('pipname'))]"
              }
            }
          }
        ]
      }
    },
    //create NAT rules for lb
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(parameters('lbName'), '/', parameters('inboundNATrules')[copyIndex('lbNatLoop')].name)]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "lbNatLoop",
        "count": "[length(parameters('inboundNATrules'))]"
      },
      "dependsOn": [
        "[parameters('lbname')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('lbName')),'/frontendIPConfigurations/loadBalancerFrontend')]"
        },
        "protocol": "[parameters('inboundNATrules')[copyIndex('lbNatLoop')].protocol]",
        "frontendPort": "[parameters('inboundNATrules')[copyIndex('lbNatLoop')].frontendPort]",
        "backendPort": "[parameters('inboundNATrules')[copyIndex('lbNatLoop')].backendPort]",
        "enableFloatingIP": false
      }
    },
    //add lb rules to the nic
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicname')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/',parameters('lbName'), '/inboundNatRules/', parameters('inboundNATrules')[sub(length(parameters('inboundNATrules')),1)].name)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('nicvnet'), parameters('nicsubnet'))]"
              },
              "copy": [
                {
                    "name": "loadBalancerInboundNatRules",
                    "count": "[length(parameters('inboundNATrules'))]",
                    "input": {
                      "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')),'/inboundNatRules/', parameters('inboundNATrules')[copyIndex('loadBalancerInboundNatRules')].name)]"
                    }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}