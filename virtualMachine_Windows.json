{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetwork": {
      "defaultValue": {
        "virtualNetworkName": "virtualNetwork"
      },
      "type": "object"
    },
    "nics": {
      "type": "array",
      "defaultValue": [
        {
          "namepreffix": "local",
          "SubnetName": "subnet",
          "privateIPAllocationMethod": "Dynamic",
          "privateIPAddress": null, //required if allocation is static
          "publicIPAllocationMethod": "Dynamic", //required if publicIPaddress is true
          "publicIPAddress": "false",
          "dnsServers": []
        }
      ]
    },
    "StorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "VmName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 15
    },
    "VmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s"
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview",
        "2016-Datacenter"
      ]
    },
    "DataDisksExist": {
      "type": "int",
      "defaultValue": 0
    },
    "dataDisks": {
      "type": "array",
      "defaultValue": [
        {
          "nameprefix": "temp",
          "createOption": "Empty",
          "diskSizeGB": "1023"
        }
      ]
    },
    "AdminUsername": {
      "type": "string",
      "minLength": 1
    },
    "AdminPassword": {
      "type": "securestring"
    },
    "licenseType": {
      "type": "string",
      "defaultValue": "Windows_Server"
    }
  },
  "variables": {
    "StorageName": "[concat('storage', uniqueString(resourceGroup().id))]",
    "ImagePublisher": "MicrosoftWindowsServer",
    "ImageOffer": "WindowsServer",
    "OSDiskName": "[concat(parameters('VMName'),'-OSDisk')]",
    "StorageAccountContainerName": "vhds",
    "copy": [
      {
        "name": "Disks",
        "count": "[if(equals(parameters('DataDisksExist'),0),1, length(parameters('dataDisks')))]",
        "input": {
          "name": "[concat(parameters('VMName'),'-',parameters('dataDisks')[copyIndex('Disks')].nameprefix,'.vhd')]",
          "lun": "[copyIndex('Disks')]",
          "createOption": "[parameters('dataDisks')[copyIndex('Disks')].createOption]",
          "diskSizeGB": "[parameters('dataDisks')[copyIndex('Disks')].diskSizeGB]",
          "vhd": {
            "uri": "[concat('https://',variables('StorageName'),'.blob.core.windows.net/', variables('StorageAccountContainerName'), '/', concat(parameters('VMName'),'-',parameters('dataDisks')[copyIndex('Disks')].nameprefix,'.vhd'))]"
          }
        }
      }
    ]
  },
  "resources": [
    {
      "name": "[variables('StorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-02-01",
      "sku": {
        "name": "[parameters('StorageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "ProgectNameStorage"
      },
      "kind": "Storage"
    },
    {
      "condition": "[equals(parameters('nics')[copyIndex('publiIPCopy')].publicIPAddress,'true')]",
      "apiVersion": "2018-02-01",
      "name": "[concat(parameters('VMName'),'public-ip-linked-template',copyIndex('publiIPCopy'))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/yyakushev/Azure-templates/master/public-ip.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "pipname": {
            "value": "[concat(parameters('VMName'),'-',parameters('nics')[copyIndex()].namepreffix,'-nic',copyIndex(),'-pip')]"
          },
          "publicIPAllocationMethod": {
            "value": "[parameters('nics')[copyIndex()].publicIPAllocationMethod]"
          }
        }
      },
      "copy": {
        "name": "publiIPCopy",
        "count": "[length(parameters('nics'))]"
      },
      "dependsOn": []
    },
    {
      "name": "[concat(parameters('VMName'),'-',parameters('nics')[copyIndex()].namepreffix,'-nic',copyIndex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-02-01",
      "dependsOn": [
        "publiIPCopy"
        // "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork').virtualNetworkName)]"
      ],
      "tags": {},
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "[parameters('nics')[copyIndex()].privateIPAllocationMethod]",
              "privateIPAddress": "[parameters('nics')[copyIndex()].privateIPAddress]",
              "publicIPAddress": "[if(equals(parameters('nics')[copyIndex()].publicIPAddress,'true'),json(concat('{\"id\": \"',resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('VMName'),'-',parameters('nics')[copyIndex()].namepreffix,'-nic',copyIndex(),'-pip')),'\"}')),json('null'))]",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').virtualNetworkName, parameters('nics')[copyIndex()].SubnetName)]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": "[parameters('nics')[copyIndex()].dnsServers]"
        }
      },
      "copy": {
        "name": "nics-copy",
        "count": "[length(parameters('nics'))]"
      }
    },
    {
      "name": "[parameters('VMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageName'))]",
        "nics-copy",
        "publiIPPCopy"
      ],
      "tags": {},
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VMName')]",
          "adminUsername": "[parameters('AdminUsername')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ImagePublisher')]",
            "offer": "[variables('ImageOffer')]",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "OSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('StorageName')), '2016-01-01').primaryEndpoints.blob, variables('StorageAccountContainerName'), '/', variables('OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": "[if(equals(parameters('DataDisksExist'),0),json('null'),variables('Disks'))]"
        },
        "networkProfile": {
          "copy": [
            {
              "name": "networkInterfaces",
              "count": "[length(parameters('nics'))]",
              "input": {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('VMName'),'-',parameters('nics')[copyIndex('networkInterfaces')].namepreffix,'-nic',copyIndex('networkInterfaces')))]",
                "properties": {
                  "primary": "[if(equals(copyIndex('networkInterfaces'),0),bool('true'),bool('false'))]"
                }
              }
            }
          ]
        },
        "licenseType": "[parameters('licenseType')]"
      },
      "resources": []
    }
  ],
  "outputs": {}
}